{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-course\\\\feedback-app\\\\src\\\\components\\\\FeedbackForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Card from './shared/Card';\nimport Button from './shared/Button';\nimport { useState, useContext, useEffect } from 'react';\nimport RatingSelect from './RatingSelect';\nimport FeedbackContext from '../context/FeedbackContext';\nimport image from '../images/image-thumbnail.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FeedbackForm() {\n  _s();\n\n  const [text, setText] = useState('');\n  const [btnDisabled, setBtnDisabled] = useState(true);\n  const [message, setMessage] = useState('');\n  const [rating, setRating] = useState(4);\n  const {\n    addFeedback,\n    feedbackEdit,\n    updateFeedback\n  } = useContext(FeedbackContext);\n  useEffect(() => {\n    if (feedbackEdit.edit === true) {\n      setBtnDisabled(false);\n      setText(feedbackEdit.item.text);\n      setRating(feedbackEdit.item.rating);\n    }\n  }, [feedbackEdit]);\n\n  const handleTextChange = e => {\n    if (text === '') {\n      setMessage(null);\n      setBtnDisabled(true);\n    } else if (text !== '' && text.trim().length <= 10) {\n      setBtnDisabled(true);\n      setMessage('Text must be at least 10 characters');\n    } else {\n      setMessage(null);\n      setBtnDisabled(false);\n    }\n\n    setText(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (text.trim().length > 10) {\n      const newFeedback = {\n        text,\n        rating\n      };\n\n      if (feedbackEdit.edit === true) {\n        updateFeedback(feedbackEdit.item.id, newFeedback);\n      } else {\n        addFeedback(newFeedback);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FeedbackForm, \"IlBqgD2zcROy1/gBRQTFSctgvF0=\");\n\n_c = FeedbackForm;\nexport default FeedbackForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedbackForm\");","map":{"version":3,"sources":["D:/react-course/feedback-app/src/components/FeedbackForm.jsx"],"names":["React","Card","Button","useState","useContext","useEffect","RatingSelect","FeedbackContext","image","FeedbackForm","text","setText","btnDisabled","setBtnDisabled","message","setMessage","rating","setRating","addFeedback","feedbackEdit","updateFeedback","edit","item","handleTextChange","e","trim","length","target","value","handleSubmit","preventDefault","newFeedback","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AACA,OAAOC,KAAP,MAAkB,+BAAlB;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AAEpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,CAAD,CAApC;AAEA,QAAM;AAAEe,IAAAA,WAAF;AAAeC,IAAAA,YAAf;AAA6BC,IAAAA;AAA7B,MAAgDhB,UAAU,CAACG,eAAD,CAAhE;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIc,YAAY,CAACE,IAAb,KAAsB,IAA1B,EAAgC;AAC5BR,MAAAA,cAAc,CAAC,KAAD,CAAd;AACAF,MAAAA,OAAO,CAACQ,YAAY,CAACG,IAAb,CAAkBZ,IAAnB,CAAP;AACAO,MAAAA,SAAS,CAACE,YAAY,CAACG,IAAb,CAAkBN,MAAnB,CAAT;AACH;AACJ,GANQ,EAMN,CAACG,YAAD,CANM,CAAT;;AAQA,QAAMI,gBAAgB,GAAIC,CAAD,IAAO;AAC5B,QAAId,IAAI,KAAK,EAAb,EAAiB;AACbK,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,MAAAA,cAAc,CAAC,IAAD,CAAd;AACH,KAHD,MAGO,IAAIH,IAAI,KAAK,EAAT,IAAeA,IAAI,CAACe,IAAL,GAAYC,MAAZ,IAAsB,EAAzC,EAA6C;AAChDb,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,MAAAA,UAAU,CAAC,qCAAD,CAAV;AACH,KAHM,MAGA;AACHA,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,MAAAA,cAAc,CAAC,KAAD,CAAd;AACH;;AAEDF,IAAAA,OAAO,CAACa,CAAC,CAACG,MAAF,CAASC,KAAV,CAAP;AACH,GAbD;;AAeA,QAAMC,YAAY,GAAIL,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACM,cAAF;;AACA,QAAIpB,IAAI,CAACe,IAAL,GAAYC,MAAZ,GAAqB,EAAzB,EAA6B;AACzB,YAAMK,WAAW,GAAG;AAChBrB,QAAAA,IADgB;AAEhBM,QAAAA;AAFgB,OAApB;;AAKA,UAAIG,YAAY,CAACE,IAAb,KAAsB,IAA1B,EAAgC;AAC5BD,QAAAA,cAAc,CAACD,YAAY,CAACG,IAAb,CAAkBU,EAAnB,EAAuBD,WAAvB,CAAd;AACH,OAFD,MAEO;AACHb,QAAAA,WAAW,CAACa,WAAD,CAAX;AACH;AACJ;AACJ,GAdD;;AAgBF,sBACE,QAAC,IAAD;AAAA,2BACI;AAAK,MAAA,GAAG,EAAEvB,KAAV;AAAiB,MAAA,GAAG,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GA9DQC,Y;;KAAAA,Y;AAgET,eAAeA,YAAf","sourcesContent":["import React from 'react'\r\nimport Card from './shared/Card'\r\nimport Button from './shared/Button'\r\nimport { useState, useContext, useEffect } from 'react'\r\nimport RatingSelect from './RatingSelect'\r\nimport FeedbackContext from '../context/FeedbackContext'\r\nimport image from '../images/image-thumbnail.png'\r\n\r\nfunction FeedbackForm() {\r\n\r\n    const [text, setText] = useState('')\r\n    const [btnDisabled, setBtnDisabled] = useState(true)\r\n    const [message, setMessage] = useState('')\r\n    const [rating, setRating] = useState(4)\r\n\r\n    const { addFeedback, feedbackEdit, updateFeedback } = useContext(FeedbackContext)\r\n\r\n    useEffect(() => {\r\n        if (feedbackEdit.edit === true) {\r\n            setBtnDisabled(false)\r\n            setText(feedbackEdit.item.text)\r\n            setRating(feedbackEdit.item.rating)\r\n        }\r\n    }, [feedbackEdit])\r\n\r\n    const handleTextChange = (e) => {\r\n        if (text === '') {\r\n            setMessage(null)\r\n            setBtnDisabled(true)\r\n        } else if (text !== '' && text.trim().length <= 10) {\r\n            setBtnDisabled(true)\r\n            setMessage('Text must be at least 10 characters')\r\n        } else {\r\n            setMessage(null)\r\n            setBtnDisabled(false)\r\n        }\r\n\r\n        setText(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (text.trim().length > 10) {\r\n            const newFeedback = {\r\n                text,\r\n                rating\r\n            }\r\n\r\n            if (feedbackEdit.edit === true) {\r\n                updateFeedback(feedbackEdit.item.id, newFeedback)\r\n            } else {\r\n                addFeedback(newFeedback)\r\n            }\r\n        }\r\n    }\r\n    \r\n  return (\r\n    <Card>\r\n        <img src={image} alt=\"\" />\r\n      {/* <form onSubmit={handleSubmit}>\r\n        <h2>How would you rate your service with us ?</h2>\r\n        <RatingSelect select={(rating) => setRating(rating)}></RatingSelect>\r\n        <div className='input-group'>\r\n            <input type=\"text\" onChange={handleTextChange} value={text} placeholder='Write a review' />\r\n            <Button type='submit' isDisable={btnDisabled}>Send</Button>\r\n        </div>\r\n        {message && <div>{message}</div>}\r\n      </form> */}\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default FeedbackForm\r\n"]},"metadata":{},"sourceType":"module"}