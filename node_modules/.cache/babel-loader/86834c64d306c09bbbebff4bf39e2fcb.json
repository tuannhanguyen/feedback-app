{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-course\\\\feedback-app\\\\src\\\\components\\\\FeedbackForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Card from './shared/Card';\nimport Button from './shared/Button';\nimport { useState, useContext } from 'react';\nimport RatingSelect from './RatingSelect';\nimport { v4 as uuidv4 } from \"uuid\";\nimport FeedbackContext from '../context/FeedbackContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FeedbackForm() {\n  _s();\n\n  const [text, setText] = useState('');\n  const [btnDisabled, setBtnDisabled] = useState(true);\n  const [message, setMessage] = useState('');\n  const [rating, setRating] = useState(4);\n  const [feedback, setFeedback] = useState(FeedbackData);\n\n  const addFeedback = newFeedback => {\n    newFeedback.id = uuidv4();\n    setFeedback([newFeedback, ...feedback]);\n  };\n\n  const handleTextChange = e => {\n    if (text === '') {\n      setMessage(null);\n      setBtnDisabled(true);\n    } else if (text !== '' && text.trim().length <= 10) {\n      setBtnDisabled(true);\n      setMessage('Text must be at least 10 characters');\n    } else {\n      setMessage(null);\n      setBtnDisabled(false);\n    }\n\n    setText(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (text.trim().length > 10) {\n      const newFeedback = {\n        text,\n        rating\n      };\n      handleAdd(newFeedback);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"How would you rate your service with us ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RatingSelect, {\n        select: rating => setRating(rating)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: handleTextChange,\n          value: text,\n          placeholder: \"Write a review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          isDisable: btnDisabled,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FeedbackForm, \"OPnOv7QWJW5nuHkiUS7gw1gGdsk=\");\n\n_c = FeedbackForm;\nexport default FeedbackForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedbackForm\");","map":{"version":3,"sources":["D:/react-course/feedback-app/src/components/FeedbackForm.jsx"],"names":["React","Card","Button","useState","useContext","RatingSelect","v4","uuidv4","FeedbackContext","FeedbackForm","text","setText","btnDisabled","setBtnDisabled","message","setMessage","rating","setRating","feedback","setFeedback","FeedbackData","addFeedback","newFeedback","id","handleTextChange","e","trim","length","target","value","handleSubmit","preventDefault","handleAdd"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Card from './shared/Card'\r\nimport Button from './shared/Button'\r\nimport { useState, useContext } from 'react'\r\nimport RatingSelect from './RatingSelect'\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport FeedbackContext from '../context/FeedbackContext'\r\n\r\nfunction FeedbackForm() {\r\n\r\n    const [text, setText] = useState('')\r\n    const [btnDisabled, setBtnDisabled] = useState(true)\r\n    const [message, setMessage] = useState('')\r\n    const [rating, setRating] = useState(4)\r\n\r\n    const [feedback, setFeedback] = useState(FeedbackData);\r\n\r\n    const addFeedback = (newFeedback) => {\r\n      newFeedback.id = uuidv4();\r\n      setFeedback([newFeedback, ...feedback]);\r\n    };\r\n\r\n    const handleTextChange = (e) => {\r\n        if (text === '') {\r\n            setMessage(null)\r\n            setBtnDisabled(true)\r\n        } else if (text !== '' && text.trim().length <= 10) {\r\n            setBtnDisabled(true)\r\n            setMessage('Text must be at least 10 characters')\r\n        } else {\r\n            setMessage(null)\r\n            setBtnDisabled(false)\r\n        }\r\n\r\n        setText(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (text.trim().length > 10) {\r\n            const newFeedback = {\r\n                text,\r\n                rating\r\n            }\r\n            handleAdd(newFeedback)\r\n        }\r\n    }\r\n    \r\n  return (\r\n    <Card>\r\n      <form onSubmit={handleSubmit}>\r\n        <h2>How would you rate your service with us ?</h2>\r\n        <RatingSelect select={(rating) => setRating(rating)}></RatingSelect>\r\n        <div className='input-group'>\r\n            <input type=\"text\" onChange={handleTextChange} value={text} placeholder='Write a review' />\r\n            <Button type='submit' isDisable={btnDisabled}>Send</Button>\r\n        </div>\r\n        {message && <div>{message}</div>}\r\n      </form>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default FeedbackForm\r\n"]},"metadata":{},"sourceType":"module"}