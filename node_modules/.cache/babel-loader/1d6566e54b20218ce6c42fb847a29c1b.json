{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-course\\\\feedback-app\\\\src\\\\components\\\\FeedbackList.jsx\",\n    _s = $RefreshSig$();\n\nimport FeedbackItem from \"./FeedbackItem\";\nimport PropTypes from \"prop-types\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { useContext } from \"react\";\nimport FeedbackContext from \"../context/FeedbackContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FeedbackList() {\n  _s();\n\n  const {\n    feedback,\n    isLoading\n  } = useContext(FeedbackContext);\n\n  if (!isLoading && (!feedback || feedback.length === 0)) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No feedback yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n\n  return isLoading ? /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 22\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feedback-list\",\n    children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: feedback.map(item => /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        exit: {\n          opacity: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(FeedbackItem, {\n          item: item\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 46\n  }, this);\n} // FeedbackList.propTypes = {\n//   feedback: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.number.isRequired,\n//       text: PropTypes.string.isRequired,\n//       rating: PropTypes.number.isRequired,\n//     })\n//   ),\n// };\n\n\n_s(FeedbackList, \"+K9rn8B5ny2VfMrZjAAiemoNM9c=\");\n\n_c = FeedbackList;\nexport default FeedbackList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedbackList\");","map":{"version":3,"sources":["D:/react-course/feedback-app/src/components/FeedbackList.jsx"],"names":["FeedbackItem","PropTypes","motion","AnimatePresence","useContext","FeedbackContext","FeedbackList","feedback","isLoading","length","map","item","opacity","id"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,EAAiBC,eAAjB,QAAwC,eAAxC;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,eAAP,MAA4B,4BAA5B;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACtB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA0BJ,UAAU,CAACC,eAAD,CAA1C;;AAEA,MAAK,CAACG,SAAD,KAAe,CAACD,QAAD,IAAaA,QAAQ,CAACE,MAAT,KAAoB,CAAhD,CAAL,EAAyD;AACvD,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,SAAOD,SAAS,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAH,gBAA2B;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BAC3C,QAAC,eAAD;AAAA,gBACGD,QAAQ,CAACG,GAAT,CAAcC,IAAD,iBACZ,QAAC,MAAD,CAAQ,GAAR;AAEE,QAAA,OAAO,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAFX;AAGE,QAAA,OAAO,EAAE;AAAEA,UAAAA,OAAO,EAAE;AAAX,SAHX;AAIE,QAAA,IAAI,EAAE;AAAEA,UAAAA,OAAO,EAAE;AAAX,SAJR;AAAA,+BAME,QAAC,YAAD;AAEE,UAAA,IAAI,EAAED;AAFR,WACOA,IAAI,CAACE,EADZ;AAAA;AAAA;AAAA;AAAA;AANF,SACOF,IAAI,CAACE,EADZ;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AAD2C;AAAA;AAAA;AAAA;AAAA,UAA3C;AAiBD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAlCSP,Y;;KAAAA,Y;AAoCT,eAAeA,YAAf","sourcesContent":["import FeedbackItem from \"./FeedbackItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { useContext } from \"react\";\r\nimport FeedbackContext from \"../context/FeedbackContext\";\r\n\r\nfunction FeedbackList() {\r\n  const { feedback, isLoading } = useContext(FeedbackContext);\r\n\r\n  if ( !isLoading && (!feedback || feedback.length === 0)) {\r\n    return <p>No feedback yet</p>;\r\n  }\r\n  \r\n  return isLoading ? <h3>Loading...</h3> : ( <div className=\"feedback-list\">\r\n  <AnimatePresence>\r\n    {feedback.map((item) => (\r\n      <motion.div\r\n        key={item.id}\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n      >\r\n        <FeedbackItem\r\n          key={item.id}\r\n          item={item}\r\n        />\r\n      </motion.div>\r\n    ))}\r\n  </AnimatePresence>\r\n</div>)\r\n}\r\n\r\n// FeedbackList.propTypes = {\r\n//   feedback: PropTypes.arrayOf(\r\n//     PropTypes.shape({\r\n//       id: PropTypes.number.isRequired,\r\n//       text: PropTypes.string.isRequired,\r\n//       rating: PropTypes.number.isRequired,\r\n//     })\r\n//   ),\r\n// };\r\n\r\nexport default FeedbackList;\r\n"]},"metadata":{},"sourceType":"module"}